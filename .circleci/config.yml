version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            source venv/bin/activate
            pip install -U pip wheel twine
            pip install --index-url https://${FURY_DEPLOY_TOKEN}@pypi.fury.io/picwell/ --extra-index-url https://pypi.org/simple/ .
      - run:
          name: Build package
          command: |
            source venv/bin/activate
            python setup.py sdist bdist_wheel --universal
      - persist_to_workspace:
          root: ~/repo
          paths:
            - ./
      - store_artifacts:
          path: ~/repo/dist

  test:
    docker:
      - image: circleci/python:2
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            source venv/bin/activate
            pip install -U pip wheel
            pip install --index-url https://${FURY_DEPLOY_TOKEN}@pypi.fury.io/picwell/ --extra-index-url https://pypi.org/simple/ .
      - run:
          name: Run unit tests
          command: |
            source venv/bin/activate
            python setup.py test --addopts '--durations=10 --junitxml=test-reports/junit.xml'
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
#  test_python3:
#    docker:
#      - image: circleci/python:3.7
#    working_directory: ~/repo
#    steps:
#      - checkout
#      - run:
#          name: Install Python deps in a venv
#          command: |
#            mkdir -p ./venv
#            virtualenv ./venv
#            source venv/bin/activate
#            pip install -U pip wheel
#            pip install --index-url https://${FURY_DEPLOY_TOKEN}@pypi.fury.io/picwell/ --extra-index-url https://pypi.org/simple/ .
#      - run:
#          name: Run unit tests
#          command: |
#            source venv/bin/activate
#            python setup.py test --addopts '--durations=10 --junitxml=test-reports/junit.xml'
#      - store_test_results:
#          path: test-reports
#      - store_artifacts:
#          path: test-reports
  upload_artifact:
    docker:
      - image: circleci/python:2
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Upload packages to Pypi server
          command: |
            source venv/bin/activate
            twine upload dist/* --repository-url https://push.fury.io/picwell -u "${FURY_PUSH_TOKEN}" -p ""

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context: gemfury-pull
      - test:
          context: gemfury-pull
#      - test_python3:
#          context: gemfury-pull
      - upload_artifact:
          context: gemfury-push
          requires:
            - build
            - test
#            - test_python3
          filters:
            branches:
              only:
                - master
